server {
    root        /usr/share/nginx/www;
    server_name acousticbrainz.org;
    access_log  /var/log/nginx/acousticbrainz-combined.log combined;
    error_log   /var/log/nginx/acousticbrainz-error.log notice;
    client_max_body_size 100M;

    location ~ /.well-known {
        # for letsencrypt webroot plugin
        # https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-14-04
        #
        # cd /opt/letsencrypt
        # ./letsencrypt-auto certonly -a webroot --webroot-path=/usr/share/nginx/html -d acousticbrainz.org
        #
        root /usr/share/nginx/html;
        allow all;
    }

    location /static {
        root /home/acousticbrainz/acousticbrainz-server/webserver;
        gzip on;
        gzip_http_version 1.0;
        gzip_comp_level 6;
        gzip_proxied any;
        gzip_types text/plain text/css application/json application/x-javascript text/javascript;
        gzip_buffers 16 8k;
        gzip_vary on;
    }

    location / {
        try_files is_down.html $uri @ab;
    }

    location @ab {
        include uwsgi_params;
        uwsgi_pass unix:/tmp/acousticbrainz.uwsgi.sock;
        uwsgi_read_timeout 200s;
        gzip on;
        gzip_http_version 1.0;
        gzip_comp_level 6;
        gzip_proxied any;
        gzip_types text/plain application/json application/x-javascript text/javascript;
        gzip_buffers 16 8k;
        gzip_vary on;
    }
}

server {
    listen 443 ssl;
    root        /usr/share/nginx/www;
    server_name acousticbrainz.org;
    access_log  /var/log/nginx/acousticbrainz-ssl-combined.log combined;
    error_log   /var/log/nginx/acousticbrainz-ssl-error.log notice;
    client_max_body_size 100M;


    # ssl config tested using : https://www.ssllabs.com/ssltest/analyze.html?d=acousticbrainz.org
    # auto renew done using root crontab

    ssl_certificate /etc/letsencrypt/live/acousticbrainz.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/acousticbrainz.org/privkey.pem;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    # following pem file was generated by the command:
    # openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048
    ssl_dhparam /etc/ssl/certs/dhparam.pem;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_stapling on;
    ssl_stapling_verify on;
    add_header Strict-Transport-Security max-age=15768000;

    # TODO : following is common with http block, move to a separated file and include it
    location /static {
        root /home/acousticbrainz/acousticbrainz-server/webserver;
        gzip on;
        gzip_http_version 1.0;
        gzip_comp_level 6;
        gzip_proxied any;
        gzip_types text/plain text/css application/json application/x-javascript text/javascript;
        gzip_buffers 16 8k;
        gzip_vary on;
    }

    location / {
        try_files is_down.html $uri @ab;
    }

    location @ab {
        include uwsgi_params;
        uwsgi_pass unix:/tmp/acousticbrainz.uwsgi.sock;
        uwsgi_read_timeout 200s;
        gzip on;
        gzip_http_version 1.0;
        gzip_comp_level 6;
        gzip_proxied any;
        gzip_types text/plain application/json application/x-javascript text/javascript;
        gzip_buffers 16 8k;
        gzip_vary on;
    }
}

# vim: set expandtab ts=4:
